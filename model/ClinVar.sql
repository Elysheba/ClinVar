-- MySQL Script generated by MySQL Workbench
-- Wed Jul 31 08:34:11 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ClinVar
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ClinVar
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ClinVar` DEFAULT CHARACTER SET utf8 ;
USE `ClinVar` ;

-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_clinSigOrder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_clinSigOrder` (
  `label` VARCHAR(45) NOT NULL COMMENT 'Either the value corresponding to the scoring system of the ACMG, or a value representing such concepts as drug response, risk factors, etc. We are not providing an enumeration for the values we report for clinical significance within the xsd. The values are maintained here: ftp://ftp.ncbi.nlm.nih.gov/pub/GTR/standard_terms/Clinical_significance.txt.',
  `order` INT NOT NULL COMMENT 'An integer indicating the order of clinical significance: the lowest the best clinical outcome.',
  PRIMARY KEY (`label`))
ENGINE = InnoDB
COMMENT = 'Not provided by ClinVar. Manually generated.';


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_revStatOrder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_revStatOrder` (
  `label` VARCHAR(45) NOT NULL COMMENT 'Review status: variation to disease, variation in modifier gene to disease, confers sensitivity, confers resistance, variant to named protein',
  `order` INT NOT NULL COMMENT 'An integer indicating the order of review status: the lowest the least significant.',
  PRIMARY KEY (`label`))
ENGINE = InnoDB
COMMENT = 'Not provided by ClinVar. Manually generated.';


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_ReferenceClinVarAssertion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (
  `cvs` INT NOT NULL COMMENT 'ClinVar Set ID',
  `id` INT NOT NULL COMMENT 'Reference ClinVar Assertion ID',
  `accession` VARCHAR(45) NOT NULL COMMENT 'The accession assigned by ClinVar.',
  `assertion` VARCHAR(45) NOT NULL COMMENT 'Assertion type: variation to disease, variation in modifier gene to disease, confers sensitivity, confers resistance, variant to named protein',
  `reviewStatus` VARCHAR(45) NOT NULL COMMENT 'Review status: variation to disease, variation in modifier gene to disease, confers sensitivity, confers resistance, variant to named protein',
  `clinicalSignificance` VARCHAR(45) NOT NULL COMMENT 'Either the value corresponding to the scoring system of the ACMG, or a value representing such concepts as drug response, risk factors, etc. We are not providing an enumeration for the values we report for clinical significance within the xsd. The values are maintained here: ftp://ftp.ncbi.nlm.nih.gov/pub/GTR/standard_terms/Clinical_significance.txt.',
  `explanation` VARCHAR(45) NULL COMMENT 'Explanation is used only when the description is \'conflicting data from submitters\'. The element summarizes the conflict.',
  `title` VARCHAR(45) NOT NULL COMMENT 'The title is contructed from the concatenation of the description of the variation and the phenotype. In the database it is extracted from the title of RCV accession',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cvs_UNIQUE` (`cvs` ASC),
  INDEX `fk_ClinVar_ReferenceClinVarAssertion_ClinVar_clinSigOrder1_idx` (`clinicalSignificance` ASC),
  CONSTRAINT `fk_ClinVar_ReferenceClinVarAssertion_ClinVar_clinSigOrder1`
    FOREIGN KEY (`clinicalSignificance`)
    REFERENCES `ClinVar`.`ClinVar_clinSigOrder` (`label`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ClinVar_ReferenceClinVarAssertion_ClinVar_revStatOrder1`
    FOREIGN KEY (`reviewStatus`)
    REFERENCES `ClinVar`.`ClinVar_revStatOrder` (`label`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_rcvaInhMode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_rcvaInhMode` (
  `rcvaId` INT NOT NULL COMMENT 'Reference ClinVar Assertion ID',
  `inhMode` VARCHAR(45) NOT NULL COMMENT 'Mode of inheritance',
  CONSTRAINT `fk_cv_rcvaSubmitters_cv_ReferenceClinVarAssertion0`
    FOREIGN KEY (`rcvaId`)
    REFERENCES `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'A few RCVA have several mode of inheritance. These cases are handled by this table.';


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_rcvaObservedIn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_rcvaObservedIn` (
  `rcvaId` INT NOT NULL COMMENT 'Reference ClinVar Assertion ID',
  `origin` VARCHAR(45) NOT NULL COMMENT 'Sample origin',
  `taxonomyId` VARCHAR(45) NOT NULL COMMENT 'Taxonomy ID',
  `species` VARCHAR(45) NOT NULL COMMENT 'Species name',
  `affectedStatus` VARCHAR(45) NOT NULL COMMENT 'Affected status',
  `numberTested` INT NULL COMMENT 'Denominator, total individuals included in this observation set.',
  CONSTRAINT `fk_cv_rcvaSubmitters_cv_ReferenceClinVarAssertion00`
    FOREIGN KEY (`rcvaId`)
    REFERENCES `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_ClinVarAssertions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_ClinVarAssertions` (
  `cvs` INT NOT NULL COMMENT 'ClinVar Set ID',
  `id` INT NOT NULL COMMENT 'ClinVar Assertion ID',
  `accession` VARCHAR(45) NOT NULL COMMENT 'The accession assigned by ClinVar.',
  `clinicalSignificance` VARCHAR(45) NULL COMMENT 'Either the value corresponding to the scoring system of the ACMG, or a value representing such concepts as drug response, risk factors, etc. We are not providing an enumeration for the values we report for clinical significance within the xsd. The values are maintained here: ftp://ftp.ncbi.nlm.nih.gov/pub/GTR/standard_terms/Clinical_significance.txt.',
  PRIMARY KEY (`id`),
  INDEX `fk_ClinVar_ClinVarAssertions_ClinVar_ReferenceClinVarAssert_idx` (`cvs` ASC),
  CONSTRAINT `fk_ClinVar_ClinVarAssertions_ClinVar_ReferenceClinVarAssertion1`
    FOREIGN KEY (`cvs`)
    REFERENCES `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (`cvs`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_cvaObservedIn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_cvaObservedIn` (
  `cvaId` INT NOT NULL,
  `origin` VARCHAR(45) NOT NULL COMMENT 'Sample origin',
  `species` VARCHAR(45) NOT NULL COMMENT 'Species name',
  `affectedStatus` VARCHAR(45) NOT NULL COMMENT 'Affected status',
  CONSTRAINT `fk_ClinVar_cvaObservedIn_ClinVar_ClinVarAssertions1`
    FOREIGN KEY (`cvaId`)
    REFERENCES `ClinVar`.`ClinVar_ClinVarAssertions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_cvaSubmitters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_cvaSubmitters` (
  `cvaId` INT NOT NULL COMMENT 'ClinVar Assertion ID',
  `submitter` VARCHAR(45) NOT NULL COMMENT 'Submitter name',
  `primary` TINYINT NOT NULL COMMENT 'The submitter is of pirmary type',
  CONSTRAINT `fk_ClinVar_cvaObservedIn_ClinVar_ClinVarAssertions10`
    FOREIGN KEY (`cvaId`)
    REFERENCES `ClinVar`.`ClinVar_ClinVarAssertions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_sourceFiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_sourceFiles` (
  `url` VARCHAR(45) NOT NULL COMMENT 'Source file URL',
  `current` DATE NOT NULL COMMENT 'Date of the current version of the file',
  PRIMARY KEY (`url`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_variants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_variants` (
  `id` INT NOT NULL COMMENT 'Variant ID',
  `type` VARCHAR(45) NOT NULL COMMENT 'Variant type',
  `name` VARCHAR(45) NULL COMMENT 'Variant preferred or first alternate name',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_rcvaVariant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_rcvaVariant` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `rcvaId` INT NOT NULL COMMENT 'Reference ClinVar Assertion ID',
  INDEX `fk_ClinVar_rcvaVariant_ClinVar_ReferenceClinVarAssertion1_idx` (`rcvaId` ASC),
  CONSTRAINT `fk_ClinVar_rcvaVariant_ClinVar_ReferenceClinVarAssertion1`
    FOREIGN KEY (`rcvaId`)
    REFERENCES `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ClinVar_rcvaVariant_ClinVar_variants1`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varCytoLoc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varCytoLoc` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `location` VARCHAR(45) NOT NULL COMMENT 'Cytogenic location',
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants1`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varAttributes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varAttributes` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `Type` VARCHAR(45) NOT NULL,
  `integerValue` INT NULL,
  `Change` VARCHAR(45) NULL,
  `value` VARCHAR(45) NULL,
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants10`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varXRef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varXRef` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `id` VARCHAR(45) NOT NULL COMMENT 'External ID',
  `db` VARCHAR(45) NOT NULL COMMENT 'External DB',
  `type` VARCHAR(45) NULL COMMENT 'Reference type',
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants11`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varNames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varNames` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `name` VARCHAR(45) NOT NULL COMMENT 'Variant name',
  `type` VARCHAR(45) NOT NULL COMMENT 'Variant name type: Preferred or Alternate',
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants12`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_entrezNames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_entrezNames` (
  `entrez` INT NOT NULL COMMENT 'Entrez Gene ID',
  `name` VARCHAR(45) NOT NULL COMMENT 'Gene name',
  `symbol` VARCHAR(45) NOT NULL COMMENT 'Gene symbol',
  PRIMARY KEY (`entrez`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varEntrez`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varEntrez` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `entrez` INT NOT NULL COMMENT 'Entrez Gene ID',
  `type` VARCHAR(45) NOT NULL COMMENT 'Type of the association between the variant and the gene',
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants13`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ClinVar_varEntrez_ClinVar_entrezNames1`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_entrezNames` (`entrez`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_varSeqLoc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_varSeqLoc` (
  `varId` INT NOT NULL COMMENT 'Variant ID',
  `Accession` VARCHAR(45) NOT NULL COMMENT 'Sequence accession ID',
  `alternateAllele` VARCHAR(45) NULL COMMENT 'Alternate allele',
  `Assembly` VARCHAR(45) NOT NULL COMMENT 'Assembly',
  `AssemblyAccessionVersion` VARCHAR(45) NOT NULL COMMENT 'Version of assembly accession',
  `AssemblyStatus` VARCHAR(45) NOT NULL COMMENT 'Status of the assembly: current or previous',
  `Chr` VARCHAR(45) NOT NULL COMMENT 'Chromosome name',
  `display_start` INT NOT NULL,
  `display_stop` INT NULL,
  `innerStart` INT NULL,
  `innerStop` INT NULL,
  `outerStart` INT NULL,
  `outerStop` INT NULL,
  `referenceAllele` VARCHAR(45) NULL COMMENT 'Reference allele',
  `start` INT NULL,
  `stop` INT NULL,
  `Strand` VARCHAR(45) NULL,
  `variantLength` INT NULL COMMENT 'Length of the variant',
  INDEX `fk_ClinVar_varCytoLoc_ClinVar_variants1_idx` (`varId` ASC),
  CONSTRAINT `fk_ClinVar_varCytoLoc_ClinVar_variants14`
    FOREIGN KEY (`varId`)
    REFERENCES `ClinVar`.`ClinVar_variants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_traits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_traits` (
  `id` INT NOT NULL COMMENT 'ClinVar trait ID',
  `name` VARCHAR(45) NOT NULL COMMENT 'Trait preferred or first alternate name',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5
COMMENT = '		';


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_rcvaTraits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_rcvaTraits` (
  `rcvaId` INT NOT NULL COMMENT 'Reference ClinVar Assertion ID',
  `t.id` INT NOT NULL COMMENT 'ClinVar trait ID',
  `traitType` VARCHAR(45) NOT NULL COMMENT 'Trait type',
  INDEX `fk_ClinVar_rcvaTraits_ClinVar_traits1_idx` (`t.id` ASC),
  CONSTRAINT `fk_ClinVar_rcvaTraits_ClinVar_traits1`
    FOREIGN KEY (`t.id`)
    REFERENCES `ClinVar`.`ClinVar_traits` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ClinVar_rcvaTraits_ClinVar_ReferenceClinVarAssertion1`
    FOREIGN KEY (`rcvaId`)
    REFERENCES `ClinVar`.`ClinVar_ReferenceClinVarAssertion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_traitCref`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_traitCref` (
  `t.id` INT NOT NULL COMMENT 'ClinVar trait ID',
  `id` VARCHAR(45) NOT NULL COMMENT 'External ID',
  `db` VARCHAR(45) NOT NULL COMMENT 'External DB',
  `type` VARCHAR(45) NULL COMMENT 'Reference type',
  CONSTRAINT `fk_ClinVar_traitCref_ClinVar_traits1`
    FOREIGN KEY (`t.id`)
    REFERENCES `ClinVar`.`ClinVar_traits` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClinVar`.`ClinVar_traitNames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClinVar`.`ClinVar_traitNames` (
  `t.id` INT NOT NULL COMMENT 'ClinVar trait ID',
  `name` VARCHAR(45) NOT NULL COMMENT 'Trait name',
  `type` VARCHAR(45) NOT NULL COMMENT '\"Alternate\" or \"Preferred\"',
  CONSTRAINT `fk_ClinVar_traitCref_ClinVar_traits10`
    FOREIGN KEY (`t.id`)
    REFERENCES `ClinVar`.`ClinVar_traits` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
